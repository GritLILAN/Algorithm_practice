class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        unordered_map<char, int> mp;
        int n = s.size();
        int cnt = 0;
        string res;
        deque<char> q;
        for(int i = 0; i < n; i++){
            if(mp.count(s[i])){
                mp[s[i]]++;
                while(mp[s[i]] > 1){
                    auto u = q.front();
                    mp[u]--;
                    q.pop_front();
                }
            }
            else{
                mp.insert({s[i], 1});
            }
            q.push_back(s[i]);
            if(cnt < q.size()){
                cnt = q.size();
                string str(q.begin(), q.end());
                res = str;
            }
        }
        return cnt;
    }
};