一、方法1：字母排序
（1）自己写的繁琐做法
class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<string, int> mp;//记录是第几个集合（集合的意思是某一个由字母异位词组成的数组）
        vector<vector<string>> res;
        set<string> st;//判断是否已经有这个集合
        int cnt = 0;
        for(int i = 0; i < strs.size();i++){
            string s = strs[i];
            sort(s.begin(), s.end());
            if(!st.count(s)){
                vector<string> tmp;
                tmp.push_back(strs[i]);
                res.push_back(tmp);
                mp[s] = cnt;
                st.insert(s);
                cnt++;
            }
            else{
                res[mp[s]].push_back(strs[i]);
            }
        }
        return res;

    }
};

----------------------------------------------------------------------

（2）题解做法
class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        unordered_map<string, vector<string>> mp;
        for(string& s : strs){
            string tmp = s;
            sort(tmp.begin(),tmp.end());
            mp[tmp].push_back(s);
        }
        vector<vector<string>> res;
        for(auto it = mp.begin(); it != mp.end();it++){
            res.push_back(it->second);
        }
        return res;
    }
};
